units:
  kx: U
  ky: U
  px: 2
  py: 2
points:
  key:
    footprints:
      mx_hotswap:
        type: mx
        params:
          hotswap: true
          reverse: false
          keycaps: true
        nets:
          from: =colrow
          to: =column_net
      # mx:
      #   type: mx
      #   params:
      #     reverse: false
      #     keycaps: true
      #   nets:
      #     from: =colrow
      #     to: =column_net
      diode:
        type: diode
        nets:
          from: =colrow
          to: =row_net
        anchor:
          shift: [0, -5]
  zones:
    matrix:
      # anchor:
      #   rotate: 5
      key.padding: ky
      columns:
        pinky:
          stagger: 0 ky
          spread: kx
          key:
            bind: [0,9,0,0]
            column_net: C1
            mirror.column_net: C10
        ring:
          stagger: 0.7 ky
          spread: kx
          key:
            column_net: C2
            mirror.column_net: C9
        middle:
          stagger: 0.2 ky
          spread: kx
          key:
            column_net: C3
            mirror.column_net: C8
        index:
          stagger: -0.2 ky
          spread: kx
          key:
            column_net: C4
            mirror.column_net: C7
        inner:
          stagger: -0.1 ky
          spread: kx
          key:
            # bind: [0,40,20,0]
            column_net: C5
            mirror.column_net: C6
      rows:
        bottom:
          row_net: R3
        home:
          row_net: R2
        top:
          row_net: R1
    thumbfan:
      anchor:
        ref: matrix_inner_bottom
        shift: [-1.5 kx, -1 ky]
      columns:
        near:
          spread: kx
          rotate: -15
          origin: [-1 kx, -0.5 ky]
          key:
            column_net: C3
            mirror.column_net: C8
        home:
          spread: kx
          rotate: -15
          origin: [-0.5 kx, -0.5 ky]
          key:
            column_net: C4
            mirror.column_net: C7
        far:
          spread: kx
          rotate: -15
          origin: [-0.5 kx, -0.5 ky]
          key:
            column_net: C5
            mirror.column_net: C6
      rows:
        thumb:
          row_net: R4
          bind: [20,0,0,50]
  # rotate: -1
  mirror:
    ref: matrix_inner_home
    distance: 90
outlines:
  # glue:
  #   default:
  #     top:
  #       left:
  #         ref: matrix_inner_top
  #         shift: [,sy / 2]
  #       right:
  #         ref: mirror_matrix_inner_top
  #         shift: [,sy / 2]
  #     bottom:
  #       left:
  #         ref: matrix_inner_bottom
  #         shift: [,sy / -2]
  #       right:
  #         ref: mirror_matrix_inner_bottom
  #         shift: [,sy / -2]
  exports:
    # optout:
    #   main:
    #     type: keys
    #     side: both
    #     size: 20
    #     glue: false
    #     corner: px
    raw:
      - type: keys
        side: both
        size: [kx + px, ky + py]
        corner: px
    # thumbfan_glue:
    #   - type: polygon
    #     points:
    #       - ref: matrix_inner_bottom
    #         shift: [0.5 kx + 0.5px, -0.5 ky + 0.5 py]
    #       - ref: thumbfan_far_thumb
    #         shift: [0.5 kx - 0.5px, 0.5 ky + 0.5 py]
    #       - ref: thumbfan_far_thumb
    #         shift: [0.5 kx - 0.5px, -0.5 ky - 0.5 py]
    #       - ref: thumbfan_near_thumb
    #         shift: [-0.5 kx + 0.5 px, -0.5 ky - 0.5 py]
    #       - ref: matrix_pinky_bottom
    #         shift: [0.5 kx - 0.5 py, -0.5 ky - 0.5 py]
    #       - ref: matrix_pinky_home
    #       - ref: matrix_inner_home
    # patch_outer:
    #   - type: polygon
    #     points:
    #       - ref: matrix_ring_top
    #       - ref: matrix_ring_bottom
    #       - ref: matrix_pinky_bottom
    #         shift: [-0.5 (kx + px), 0]
    #       - ref: matrix_pinky_top
    #         shift: [-0.5 (kx + px), 0]
    # patch_inner:
    #   - type: polygon
    #     points:
    #       - ref: matrix_inner_top
    #         shift: [0.5 (kx + px), 0]
    #       - ref: matrix_inner_bottom
    #         shift: [0.5 (kx + px), 0]
    #       - ref: matrix_index_bottom
    #       - ref: matrix_index_top
    # controller_area:
    #   main:
    #     type: rectangle
    #     anchor:
    #       ref:
    #         - matrix_inner_top
    #       shift: [0.5 kx, -4.34 ky]
    #     size: [34, 90]
    #     #   shift: [0 kx, -4.05 ky]
    #     # size: [32, 76.5]
    #     corner: px
    pico_area:
      main:
        type: rectangle
        anchor:
          ref:
            - matrix_inner_top
          shift: [0.4 kx, -3.2 ky]
        size: [74, 71]
        corner: px
    bottom_area:
      main:
        type: rectangle
        anchor:
          ref:
            - matrix_inner_top
          shift: [1.48 kx, -5.15 ky]
        size: [33.64, 30]
        corner: px
    switches:
      main:
        type: keys
        side: both
        size: 14
        bound: false
    keycaps:
      main:
        type: keys
        side: both
        size: [kx - 1, ky - 1]
        bound: false
        corner: 1
    # keywell:
    #   main:
    #     type: outline
    #     name: raw
      # patch_inner:
      #   type: outline
      #   name: patch_inner
      #   operation: add
      # patch_outer:
      #   type: outline
      #   name: patch_outer
      #   operation: add
      # thumbfan_glue:
      #   type: outline
      #   name: thumbfan_glue
      #   operation: add
    main_outline:
      # main:
      #   type: keys
      #   side: both
      #   size: 20
      # min:
      #   type: keys
      #   side: both
      #   bound: false
      #   size: 14
      #   operation: subtract
      main:
        type: outline
        name: raw
      controller:
        type: outline
        name: pico_area
        operation: add
      bottom_area:
        type: outline
        name: bottom_area
        operation: add
    # base_outline:
    #   main:
    #     type: outline
    #     name: keywell
    #   controller:
    #     type: outline
    #     name: controller_area
    #     operation: add
    screw_holes:
      top_left:
        type: circle
        anchor:
          - ref: matrix_ring_home
            shift: [-0.5 kx, -1]
        radius: 1.05
      mirror_top_left:
        type: circle
        anchor:
          - ref: mirror_matrix_ring_home
            shift: [-0.5 kx, 0 ky]
        radius: 1.05
      bottom_left:
        type: circle
        anchor:
          - ref: matrix_pinky_bottom
            shift: [0.7 kx, 0]
        radius: 1.05
      mirror_bottom_left:
        type: circle
        anchor:
          - ref: mirror_matrix_pinky_bottom
            shift: [0.7 kx, 0]
        radius: 1.05
      top_right:
        type: circle
        anchor:
          - ref: matrix_inner_top
            shift: [-0.5 kx, -1]
        radius: 1.05
      mirror_top_right:
        type: circle
        anchor:
          - ref: mirror_matrix_inner_top
            shift: [-0.5 kx, 0]
        radius: 1.05
      palm:
        type: circle
        anchor:
          - ref: matrix_index_bottom
            shift: [0, -1.06 ky]
        radius: 1.05
      mirror_palm:
        type: circle
        anchor:
          - ref: mirror_matrix_index_bottom
            shift: [0, -1.06 ky]
        radius: 1.05
      thumb:
        type: circle
        anchor:
          - ref: thumbfan_far_thumb
            shift: [-0.55 kx, 0]
        radius: 1.05
      mirror_thumb:
        type: circle
        anchor:
          - ref: mirror_thumbfan_far_thumb
            shift: [-0.55 kx, 0]
        radius: 1.05
    mounting_holes:
      $extends: outlines.exports.screw_holes
      top_left:
        radius: 2.05
      mirror_top_left:
        radius: 2.05
      bottom_left:
        radius: 2.05
      mirror_bottom_left:
        radius: 2.05
      top_right:
        radius: 2.05
      mirror_top_right:
        radius: 2.05
      palm:
        radius: 2.05
      mirror_palm:
        radius: 2.05
      thumb:
        radius: 2.05
      mirror_thumb:
        radius: 2.05
    bottom_outline:
      main:
        type: outline
        name: main_outline
      screw_holes:
        type: outline
        # TODO use footprints with pad + via reinforcement as mounting holes
        name: screw_holes
        operation: subtract
    plate:
      main:
        type: outline
        name: raw
      switches:
        type: outline
        name: switches
        operation: subtract
      mounting_holes:
        type: outline
        # TODO use footprints with pad + via reinforcement as mounting holes
        name: screw_holes
        operation: subtract
    pcb:
      main:
        type: outline
        name: main_outline
      mounting_holes:
        type: outline
        # TODO use plated through hole footprints as mounting holes
        name: mounting_holes
        operation: subtract
pcbs:
  top_plate:
    include_keys: false
    outlines:
      edge:
        outline: plate
        layer: Edge.Cuts
    footprints:
      jlc_order_number:
        type: text
        anchor:
          ref:
            - matrix_ring_home
          shift: [-0.25 kx, 0.5 ky]
        params:
          text: "JLCJLCJLCJLC"
          justify: left
  bottom_plate:
    include_keys: false
    outlines:
      edge:
        outline: bottom_outline
        layer: Edge.Cuts
  board:
    outlines:
      edge:
        outline: pcb
        layer: Edge.Cuts
      keycaps:
        outline: keycaps
        layer: Eco1.User
    footprints:
      pi_pico:
        type: pi_pico
        anchor:
          ref:
            - matrix_inner_top
          shift: [44, -17]
          rotate: 0
      # bat:
      #   type: bat
      #   nets: 
      #     neg: GND
      #   # anchor:
      #   #   ref: board_far_bottom
      #   #   shift: [-42 , -0]
      #   #   rotate: 0
      # promicro:
      #   type: promicro_pretty
      #   # anchor:
      #   #   ref: board_pinkie_home
      #   #   shift: [-36, 0]
      # pcm12:
      #   type: pcm12
      #   # anchor:
      #   #   ref: board_pinkie_home
      #   #   shift: [-15, 7.5]
      #   #   rotate: 180
      #   nets:
      #     from: pos  
      #     to: RAW
      #   params:
      #     reverse: true 
      # b3u1000p:
      #   type: b3u1000p
      #   nets:
      #     r1: RST  
      #     r2: GND
      #   params:
      #     reverse: true 
      # mcu_l:
      #   type: promicro
      #   params:
      #     orientation: up
      #   anchor:
      #     ref:
      #       - matrix_inner_top
      #     shift: [20, -11]
      #     rotate: 270
      # mcu_r:
      #   type: promicro
      #   params:
      #     orientation: down
      #   anchor:
      #     ref:
      #       - matrix_inner_top
      #     shift: [22.5, -12.25]
      #     rotate: 270
      # pad_plus:
      #   type: pad
      #   anchor:
      #     ref:
      #       - matrix_inner_top
      #     shift: [23, -6]
      #     rotate: 0
      #   params:
      #     front: true
      #     back: true
      #     width: 1.5
      #     height: 1.5
      #     text: "B+"
      #   nets:
      #     net: Bplus
      # pad_minus:
      #   type: pad
      #   anchor:
      #     ref:
      #       - matrix_inner_top
      #     shift: [23, -3]
      #     rotate: 0
      #   params:
      #     front: true
      #     back: true
      #     width: 1.5
      #     height: 1.5
      #     text: "B-"
      #   nets:
      #     net: GND
      # trrs_l:
      #   type: trrs
      #   anchor:
      #     ref:
      #       - matrix_inner_bottom
      #     shift: [32, -15]
      #     rotate: 270
      #   params:
      #     reverse: false
      #     symmetric: false
      #   # The naming of the nets on this footprint is different from the Corne schematics.
      #   nets:
      #     A: ""
      #     B: VCC
      #     C: GND
      #     D: P0
      # trrs_r:
      #   type: trrs
      #   anchor:
      #     ref:
      #       - matrix_inner_bottom
      #     shift: [32, -13]
      #     rotate: 270
      #   params:
      #     reverse: false
      #     symmetric: false
      #   # The naming of the nets on this footprint is different from the Corne schematics.
      #   nets:
      #     A: ""
      #     B: VCC
      #     C: GND
      #     D: P0
      # jumper_l:
      #   type: jumper
      #   anchor:
      #     ref:
      #       - matrix_inner_bottom
      #     shift: [23.5, 0]
      #     rotate: 270
      #   params:
      #     side: B
      #   nets:
      #     from: Bplus
      #     to: RAW
      # jumper_r:
      #   type: jumper
      #   anchor:
      #     ref:
      #       - matrix_inner_bottom
      #     shift: [23.5, 0]
      #     rotate: 270
      #   params:
      #     side: F
      #   nets:
      #     from: Bplus
      #     to: RAW
      # slider_l:
      #   type: slider
      #   anchor:
      #     ref:
      #       - matrix_inner_bottom
      #     shift: [30, 0]
      #     rotate: 270
      #   params:
      #     side: F
      #   nets:
      #     from: RAW
      #     left: Bplus
      #     right: ''
      # slider_r:
      #   type: slider
      #   anchor:
      #     ref:
      #       - matrix_inner_bottom
      #     shift: [30, 0]
      #     rotate: 270
      #   params:
      #     side: B
      #   nets:
      #     from: RAW
      #     left: ''
      #     right: Bplus
      # reset:
      #   type: button
      #   anchor:
      #     ref:
      #       - matrix_inner_bottom
      #     shift: [17, 0]
      #     rotate: 270
      #   params:
      #     variant: 2_pin_th
      #   nets:
      #     from: GND
      #     to: RST
      info_l:
        type: text
        anchor:
          ref:
            - matrix_pinky_bottom
          shift: [0.75 kx, 0]
        params:
          text: "BRAILLE Keyboard v0.1\\nby sagar shelar"
          justify: left
      # info_r:
      #   type: text
      #   anchor:
      #     ref:
      #       - matrix_pinky_bottom
      #     shift: [0.75 kx, 0]
      #   params:
      #     layer: B.SilkS
      #     text: "BRAILLE Keyboard v0.1\\nby shaggyshelar"
      #     justify: right mirror

